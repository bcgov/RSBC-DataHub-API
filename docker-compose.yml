version: '3'
 
services:
 
    rabbitmq:
        build: ./rabbitmq
        environment:
            # The RABBITMQ_DEFAULT_USER is used
            # to connect to the web admin
            RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
            RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
        ports:
            - "15672:15672" # Web admin port
            - "5672:5672"   # TODO - Remove before flight

    ingestor:
        build: 
          context: ./ingestor
          dockerfile: Dockerfile-local
        depends_on:
          - rabbitmq
        environment:
          RABBITMQ_URL: 'rabbitmq'
          # The INGEST_USER is used to submit 
          # events for processing
          INGEST_USER: "${INGEST_USER}"
          INGEST_PASS: "${INGEST_PASS}"
          INGEST_LOG_LEVEL: "${INGEST_LOG_LEVEL}"
          SECRET_KEY: "${SECRET_KEY}"
        ports:
          - "5000:5000"
    
    validator:
        build: 
          context: ./validator
          dockerfile: Dockerfile-local
        depends_on:
          - rabbitmq
        environment:
          RABBITMQ_URL: 'rabbitmq'
          # The VALIDATE_USER is used to watch for submitted
          # events and validate them
          VALIDATOR_USER: "${VALIDATOR_USER}"
          VALIDATOR_PASS: "${VALIDATOR_PASS}"
          VALIDATOR_LOG_LEVEL: "${VALIDATOR_LOG_LEVEL}"

    writer:
        build: 
          context: ./writer
          dockerfile: Dockerfile-local
        depends_on:
          - rabbitmq
        environment:
          RABBITMQ_URL: 'rabbitmq'
          # The MQ_WRITER_USER is used to watch for validated
          # events and write them to the database
          MQ_WRITER_USER: "${MQ_WRITER_USER}"
          MQ_WRITER_PASS: "${MQ_WRITER_PASS}"
          WRITER_LOG_LEVEL: "${WRITER_LOG_LEVEL}"
          DB_HOST: "${DB_HOST}"
          DB_NAME: "${DB_NAME}"
          DB_USERNAME: "${DB_USERNAME}"
          DB_PASSWORD: "${DB_PASSWORD}"
      
