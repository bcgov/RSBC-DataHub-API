name: cd-workflow

on:
  workflow_call:
    inputs:
      DOCKER_CONTEXT:
        required: true
        type: string
      DOCKER_FILE:
        required: true
        type: string
      DOCKER_IMAGE_NAME:
        required: true
        type: string
      DOCKER_IMAGE_TAG:
        required: false
        type: string
        default: latest
    secrets:
      DOCKER_REGISTRY_BE78D6:
        required: true
      DOCKER_USERNAME_BE78D6:
        required: true
      DOCKER_PASSWORD_BE78D6:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    # if: ${{ !(
    #     github.event.pull_request.head.ref =~ '^hotfixrelease/' ||
    #     github.event.pull_request.head.ref =~ '^hotfix/' ||
    #     github.event.pull_request.head.ref =~ '^dependabot/'||
    #     github.event.pull_request.head.ref =~ '^feature/'
    #   )}}
    # if: ${{ github.event.pull_request.head.ref =~ '^release/' }}
    if: startsWith(github.event.pull_request.head.ref, 'release/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

#      - name: Setup
#        uses: docker/setup-buildx-action@v2
#        with:
#          install: true

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_BE78D6 }}
          username: ${{ secrets.DOCKER_USERNAME_BE78D6 }}
          password: ${{ secrets.DOCKER_PASSWORD_BE78D6 }}

      - name: Tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ${{ inputs.DOCKER_IMAGE_NAME }}=v
          fetch_all_tags: true

      - name: Build & Push the image
        working-directory: ${{env.WORKING_DIRECTORY}}
        run: |
          docker build -f ${{ inputs.DOCKER_FILE }} ./${{ inputs.DOCKER_CONTEXT }} -t "${{ secrets.DOCKER_REGISTRY_BE78D6 }}/${{ inputs.DOCKER_IMAGE_NAME }}:latest"
          docker push ${{ secrets.DOCKER_REGISTRY_BE78D6 }}/${{ inputs.DOCKER_IMAGE_NAME }}:latest
        
      - name: Authenticate and set context for tools namespace
        uses: redhat-actions/oc-login@v1.1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL_SILVER }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_PIPELINE_TOKEN_SILVER }}
          namespace: "${{ secrets.OPENSHIFT_LICENSE_PLATE_SILVER }}-tools"

      - name: Import new image in Openshift from Artifactory
        env:
          IMAGE_NAME: ${{ env.DOCKER_IMAGE_NAME }}
        run: |
          oc import-image $IMAGE_NAME:latest --confirm

