name: Push to Prod 

on:
  workflow_dispatch:
    inputs:
      application:
        required: true
        description: What application do you want to push to prod?
        type: choice
        options:
          - clamav-client
          - form-handler
          - ingestor
          - mail-net
          - paybc
          - validator
          - web-form
          - pdf-generator

env:
  IMAGE_NAME: ${{ github.event.inputs.application }}
  REPO_KEY: af03
  BRANCH_NAME: main
  VALUES_FILE: prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set Conditions
        run: |
          if [[ "${{ env.IMAGE_NAME }}" == "clamav-client" ]]; then
            echo "IMAGE_PREFIX=cc" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "form-handler" ]]; then
            echo "IMAGE_PREFIX=fh" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "ingestor" ]]; then
            echo "IMAGE_PREFIX=i" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "mail-net" ]]; then
            echo "IMAGE_PREFIX=mn" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "paybc" ]]; then
            echo "IMAGE_PREFIX=pbc" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "validator" ]]; then
            echo "IMAGE_PREFIX=v" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "web-form" ]]; then
            echo "IMAGE_PREFIX=wf" >> $GITHUB_ENV
          elif [[ "${{ env.IMAGE_NAME }}" == "pdf-generator" ]]; then
            echo "IMAGE_PREFIX=pdf" >> $GITHUB_ENV
          else
            echo "Unknown application: ${{ env.IMAGE_NAME }}"
          fi

      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: artifacts.developer.gov.bc.ca
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      
      # Get SHORT_SHA for the version
      - name: Get short SHA
        id: short_sha
        run: |
          echo "::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)"
          echo "Short SHA: $SHORT_SHA"

      - name: Backup Prod Image
        run: |
          docker pull artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod
          docker tag artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod-backup
          docker push artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod-backup
    
      - name: Docker Pull to Artifactory
        run: |
          docker pull artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:test
      
      - name: Docker Tag and Push to Artifactory
        run: |
          docker tag artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:test artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod
          docker push artifacts.developer.gov.bc.ca/${{env.REPO_KEY}}-${{env.IMAGE_NAME}}/${{env.IMAGE_NAME}}:prod

      - name: Set GitOps SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.RSBC_SSH_KEY }}
      
      - name: Update Helm Test Values and Commit
        id: helm
        run: |

          echo "Updating ${{ env.BRANCH_NAME }} helm  values to trigger ArgoCD deployment "
            
          # Commit and push the changes
          git config --global user.email "actions@github.com"
          git config --global user.name "RSBC-APR GitHub Actions"
          git clone -b ${{ env.BRANCH_NAME }} --single-branch git@github.com:bcgov-c/tenant-gitops-f0392a.git
            
          # Navigate to the directory containing your Helm values file for the environment develop -> DEV, test -> test
          
          cd tenant-gitops-f0392a/charts
            
          # Update the Helm values file with the new image tag and version
          DATETIME=$(date +'%Y-%m-%d %H:%M:%S')  # Get current date and time
          echo "Updating tag ${{ env.IMAGE_PREFIX }}version: to ${{ steps.short_sha.outputs.SHORT_SHA }}"
  
          sed -i "s/${{ env.IMAGE_PREFIX }}version: .*/${{ env.IMAGE_PREFIX }}version: v-${{ steps.short_sha.outputs.SHORT_SHA }} # Image Updated on $DATETIME/" ../deploy/${{ env.VALUES_FILE }}_values.yaml

          git add .
            
          git add ../deploy/${{ env.VALUES_FILE }}_values.yaml
            
          # Repackage Helm Chart      
  
          cd gitops
  
          helm dependency build
  
          git add .
            
          git commit -m "Update ${{ env.BRANCH_NAME }} image tag"

          # pull any changes
          git pull origin ${{ env.BRANCH_NAME }}
          git push origin ${{ env.BRANCH_NAME }}  # Update the branch name as needed
